{
  "version": 3,
  "sources": ["../src/app.ts"],
  "sourcesContent": ["const excelForm = document.forms.namedItem(\n  \"excelForm\"\n) as HTMLFormElement | null;\nconst fileInput = document.getElementById(\n  \"excelFile\"\n) as HTMLInputElement | null;\n\nif (!excelForm || !fileInput) {\n  throw new Error(\"Form or file input not found.\");\n  // Handle case where form or file input is not found\n}\n\nexcelForm.addEventListener(\"submit\", async (event) => {\n  event.preventDefault();\n\n  const formData = new FormData();\n  const selectedFile = fileInput.files?.[0];\n\n  if (!selectedFile) {\n    throw new Error(\"No file selected for conversion.\");\n  }\n\n  formData.append(\"excelFile\", selectedFile);\n\n  try {\n    const res = await fetch(\"/.netlify/functions/convert\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    if (!res.ok) {\n      const err = \"Failed to convert. Server returned:\";\n      console.error(err, res.status, res.statusText);\n      throw new Error(err);\n    }\n\n    // Get the blob data from the response\n    const blob = await res.blob();\n\n    // Get the filename from the Content-Disposition header\n    const contentDisposition = res.headers.get(\"Content-Disposition\");\n    const filenameMatch =\n      contentDisposition && contentDisposition.match(/filename=\"(.+?)\"/);\n    const filename = filenameMatch\n      ? filenameMatch[1]\n      : `em-${new Date().getTime()}.xlsx`;\n\n    // Create a download link\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = URL.createObjectURL(blob);\n    downloadLink.download = filename;\n\n    // Append the link to the body and trigger the click event\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n\n    // // Clean up: remove the link from the body\n    document.body.removeChild(downloadLink);\n  } catch (error) {\n    console.error(\"An error occurred during conversion:\", error);\n    // Handle error as needed\n  }\n});\n"],
  "mappings": "mBAAA,IAAMA,EAAY,SAAS,MAAM,UAC/B,WACF,EACMC,EAAY,SAAS,eACzB,WACF,EAEA,GAAI,CAACD,GAAa,CAACC,EACjB,MAAM,IAAI,MAAM,+BAA+B,EAIjDD,EAAU,iBAAiB,SAAU,MAAOE,GAAU,CACpDA,EAAM,eAAe,EAErB,IAAMC,EAAW,IAAI,SACfC,EAAeH,EAAU,QAAQ,CAAC,EAExC,GAAI,CAACG,EACH,MAAM,IAAI,MAAM,kCAAkC,EAGpDD,EAAS,OAAO,YAAaC,CAAY,EAEzC,GAAI,CACF,IAAMC,EAAM,MAAM,MAAM,8BAA+B,CACrD,OAAQ,OACR,KAAMF,CACR,CAAC,EAED,GAAI,CAACE,EAAI,GAAI,CACX,IAAMC,EAAM,sCACZ,cAAQ,MAAMA,EAAKD,EAAI,OAAQA,EAAI,UAAU,EACvC,IAAI,MAAMC,CAAG,CACrB,CAGA,IAAMC,EAAO,MAAMF,EAAI,KAAK,EAGtBG,EAAqBH,EAAI,QAAQ,IAAI,qBAAqB,EAC1DI,EACJD,GAAsBA,EAAmB,MAAM,kBAAkB,EAC7DE,EAAWD,EACbA,EAAc,CAAC,EACf,MAAM,IAAI,KAAK,EAAE,QAAQ,CAAC,QAGxBE,EAAe,SAAS,cAAc,GAAG,EAC/CA,EAAa,KAAO,IAAI,gBAAgBJ,CAAI,EAC5CI,EAAa,SAAWD,EAGxB,SAAS,KAAK,YAAYC,CAAY,EACtCA,EAAa,MAAM,EAGnB,SAAS,KAAK,YAAYA,CAAY,CACxC,OAASC,EAAO,CACd,QAAQ,MAAM,uCAAwCA,CAAK,CAE7D,CACF,CAAC",
  "names": ["excelForm", "fileInput", "event", "formData", "selectedFile", "res", "err", "blob", "contentDisposition", "filenameMatch", "filename", "downloadLink", "error"]
}
