{
  "version": 3,
  "sources": ["../src/app.ts"],
  "sourcesContent": ["const excelForm = document.forms.namedItem(\n  \"excelForm\"\n) as HTMLFormElement | null;\nconst fileInput = document.getElementById(\n  \"excelFile\"\n) as HTMLInputElement | null;\nconst divAlert = document.getElementById(\"alert\") as HTMLDivElement | null;\nconst btnConvert = document.getElementById(\n  \"convert\"\n) as HTMLButtonElement | null;\n\nconst hideAlert = () => {\n  if (divAlert) {\n    divAlert.style.display = \"none\";\n  }\n};\n\nconst showAlert = (msg: string) => {\n  if (divAlert) {\n    divAlert.innerHTML = msg;\n    divAlert.style.display = \"block\";\n  }\n};\n\nconst toggleSpinner = (el: HTMLElement | null, val: string) => {\n  if (el) {\n    if (isLoading) {\n      el.setAttribute(\"aria-busy\", \"true\");\n    } else {\n      el.removeAttribute(\"aria-busy\");\n    }\n    el.textContent = val;\n  }\n};\n\nif (!excelForm || !fileInput) {\n  throw new Error(\"Form or file input not found.\");\n  // Handle case where form or file input is not found\n}\n\nhideAlert();\n\nlet isLoading = false;\n\ntoggleSpinner(btnConvert, \"Convert\");\n\nexcelForm.addEventListener(\"submit\", async (event) => {\n  event.preventDefault();\n\n  hideAlert();\n  isLoading = true;\n  toggleSpinner(btnConvert, \"Converting...\");\n\n  const formData = new FormData();\n  const selectedFile = fileInput.files?.[0];\n\n  if (!selectedFile) {\n    throw new Error(\"No file selected for conversion.\");\n  }\n\n  formData.append(\"excelFile\", selectedFile);\n\n  try {\n    const res = await fetch(\"/.netlify/functions/convert\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    if (!res.ok) {\n      const err = \"Failed to convert. Server returned:\";\n      console.error(err, res.status, res.statusText);\n\n      showAlert(err);\n\n      throw new Error(err);\n    }\n\n    // Get the blob data from the response\n    const blob = await res.blob();\n\n    // Get the filename from the Content-Disposition header\n    const contentDisposition = res.headers.get(\"Content-Disposition\");\n    const filenameMatch =\n      contentDisposition && contentDisposition.match(/filename=\"(.+?)\"/);\n    const filename = filenameMatch\n      ? filenameMatch[1]\n      : `em-${new Date().getTime()}.xlsx`;\n\n    // Create a download link\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = URL.createObjectURL(blob);\n    downloadLink.download = filename;\n\n    // Append the link to the body and trigger the click event\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n\n    // // Clean up: remove the link from the body\n    document.body.removeChild(downloadLink);\n\n    hideAlert();\n    isLoading = false;\n    toggleSpinner(btnConvert, \"Convert\");\n  } catch (error) {\n    const msg = `ERROR:<br>An error occurred during conversion.<br>Please make sure that you are using the official Budget Estimate template and the layout was not changed.`;\n    console.error(msg, error);\n    // Handle error as needed\n    showAlert(msg);\n    isLoading = false;\n    toggleSpinner(btnConvert, \"Convert\");\n  }\n});\n"],
  "mappings": "mBAAA,IAAMA,EAAY,SAAS,MAAM,UAC/B,WACF,EACMC,EAAY,SAAS,eACzB,WACF,EACMC,EAAW,SAAS,eAAe,OAAO,EAC1CC,EAAa,SAAS,eAC1B,SACF,EAEMC,EAAY,IAAM,CAClBF,IACFA,EAAS,MAAM,QAAU,OAE7B,EAEMG,EAAaC,GAAgB,CAC7BJ,IACFA,EAAS,UAAYI,EACrBJ,EAAS,MAAM,QAAU,QAE7B,EAEMK,EAAgB,CAACC,EAAwBC,IAAgB,CACzDD,IACEE,EACFF,EAAG,aAAa,YAAa,MAAM,EAEnCA,EAAG,gBAAgB,WAAW,EAEhCA,EAAG,YAAcC,EAErB,EAEA,GAAI,CAACT,GAAa,CAACC,EACjB,MAAM,IAAI,MAAM,+BAA+B,EAIjDG,EAAU,EAEV,IAAIM,EAAY,GAEhBH,EAAcJ,EAAY,SAAS,EAEnCH,EAAU,iBAAiB,SAAU,MAAOW,GAAU,CACpDA,EAAM,eAAe,EAErBP,EAAU,EACVM,EAAY,GACZH,EAAcJ,EAAY,eAAe,EAEzC,IAAMS,EAAW,IAAI,SACfC,EAAeZ,EAAU,QAAQ,CAAC,EAExC,GAAI,CAACY,EACH,MAAM,IAAI,MAAM,kCAAkC,EAGpDD,EAAS,OAAO,YAAaC,CAAY,EAEzC,GAAI,CACF,IAAMC,EAAM,MAAM,MAAM,8BAA+B,CACrD,OAAQ,OACR,KAAMF,CACR,CAAC,EAED,GAAI,CAACE,EAAI,GAAI,CACX,IAAMC,EAAM,sCACZ,cAAQ,MAAMA,EAAKD,EAAI,OAAQA,EAAI,UAAU,EAE7CT,EAAUU,CAAG,EAEP,IAAI,MAAMA,CAAG,CACrB,CAGA,IAAMC,EAAO,MAAMF,EAAI,KAAK,EAGtBG,EAAqBH,EAAI,QAAQ,IAAI,qBAAqB,EAC1DI,EACJD,GAAsBA,EAAmB,MAAM,kBAAkB,EAC7DE,EAAWD,EACbA,EAAc,CAAC,EACf,MAAM,IAAI,KAAK,EAAE,QAAQ,CAAC,QAGxBE,EAAe,SAAS,cAAc,GAAG,EAC/CA,EAAa,KAAO,IAAI,gBAAgBJ,CAAI,EAC5CI,EAAa,SAAWD,EAGxB,SAAS,KAAK,YAAYC,CAAY,EACtCA,EAAa,MAAM,EAGnB,SAAS,KAAK,YAAYA,CAAY,EAEtChB,EAAU,EACVM,EAAY,GACZH,EAAcJ,EAAY,SAAS,CACrC,OAASkB,EAAO,CACd,IAAMf,EAAM,8JACZ,QAAQ,MAAMA,EAAKe,CAAK,EAExBhB,EAAUC,CAAG,EACbI,EAAY,GACZH,EAAcJ,EAAY,SAAS,CACrC,CACF,CAAC",
  "names": ["excelForm", "fileInput", "divAlert", "btnConvert", "hideAlert", "showAlert", "msg", "toggleSpinner", "el", "val", "isLoading", "event", "formData", "selectedFile", "res", "err", "blob", "contentDisposition", "filenameMatch", "filename", "downloadLink", "error"]
}
